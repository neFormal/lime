// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace protobuf.user {

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90byJQCgdSZXF1ZXN0EhYKBHR5cGUYASABKA4yCC5N",
            "c2dUeXBlEhgKCXBpbmdfcG9uZxgCIAEoCzIFLlBpbmcSEwoEYXV0aBgDIAEo",
            "CzIFLkF1dGgiWgoIUmVzcG9uc2USFgoEdHlwZRgBIAEoDjIILk1zZ1R5cGUS",
            "GAoJcGluZ19wb25nGAIgASgLMgUuUG9uZxIcCgRhdXRoGAMgASgLMg4uQXV0",
            "aC5SZXNwb25zZSIGCgRQaW5nIhQKBFBvbmcSDAoEdGltZRgBIAEoBCKSAwoE",
            "QXV0aBIKCgJpZBgBIAEoCRIpCg1wbGF0Zm9ybV9hdXRoGAIgAygLMhIuQXV0",
            "aC5QbGF0Zm9ybUF1dGgSHwoIYWR2X2RhdGEYAyABKAsyDS5BdXRoLkFkdkRh",
            "dGEahAEKCFJlc3BvbnNlEiUKBnN0YXR1cxgBIAEoDjIVLkF1dGguUmVzcG9u",
            "c2UuU3RhdHVzEhkKB3Byb2ZpbGUYAiABKAsyCC5Qcm9maWxlIjYKBlN0YXR1",
            "cxILCgdzdWNjZXNzEAASDAoIYmFkX2F1dGgQARIRCg1iYWNrX3ByZXNzdXJl",
            "EAIaeQoMUGxhdGZvcm1BdXRoEi0KBHR5cGUYASABKA4yHy5BdXRoLlBsYXRm",
            "b3JtQXV0aC5QbGF0Zm9ybVR5cGUSEwoLcGxhdGZvcm1faWQYAiABKAkiJQoM",
            "UGxhdGZvcm1UeXBlEgoKBmdvb2dsZRAAEgkKBWFwcGxlEAEaMAoHQWR2RGF0",
            "YRILCgNpZDEYASABKAkSCwoDaWQyGAIgASgJEgsKA2lkMxgDIAEoCSKKAQoH",
            "UHJvZmlsZRIKCgJpZBgBIAEoAxIMCgRuYW1lGAIgASgJEiYKCmxldmVsX2Rh",
            "dGEYAyABKAsyEi5Qcm9maWxlLkxldmVsRGF0YRIUCgVpdGVtcxgEIAMoCzIF",
            "Lkl0ZW0aJwoJTGV2ZWxEYXRhEgsKA2V4cBgBIAEoBRINCgVsZXZlbBgCIAEo",
            "BSIjCgRJdGVtEgwKBHR5cGUYASABKAkSDQoFY291bnQYAiABKAUqIgoHTXNn",
            "VHlwZRINCglwaW5nX3BvbmcQABIICgRhdXRoEAFCEKoCDXByb3RvYnVmLnVz",
            "ZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::protobuf.user.MsgType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Request), global::protobuf.user.Request.Parser, new[]{ "Type", "PingPong", "Auth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Response), global::protobuf.user.Response.Parser, new[]{ "Type", "PingPong", "Auth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Ping), global::protobuf.user.Ping.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Pong), global::protobuf.user.Pong.Parser, new[]{ "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Auth), global::protobuf.user.Auth.Parser, new[]{ "Id", "PlatformAuth", "AdvData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Auth.Types.Response), global::protobuf.user.Auth.Types.Response.Parser, new[]{ "Status", "Profile" }, null, new[]{ typeof(global::protobuf.user.Auth.Types.Response.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Auth.Types.PlatformAuth), global::protobuf.user.Auth.Types.PlatformAuth.Parser, new[]{ "Type", "PlatformId" }, null, new[]{ typeof(global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Auth.Types.AdvData), global::protobuf.user.Auth.Types.AdvData.Parser, new[]{ "Id1", "Id2", "Id3" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Profile), global::protobuf.user.Profile.Parser, new[]{ "Id", "Name", "LevelData", "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Profile.Types.LevelData), global::protobuf.user.Profile.Types.LevelData.Parser, new[]{ "Exp", "Level" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.user.Item), global::protobuf.user.Item.Parser, new[]{ "Type", "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgType {
    [pbr::OriginalName("ping_pong")] PingPong = 0,
    [pbr::OriginalName("auth")] Auth = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.user.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      pingPong_ = other.pingPong_ != null ? other.pingPong_.Clone() : null;
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::protobuf.user.MsgType type_ = global::protobuf.user.MsgType.PingPong;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.MsgType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ping_pong" field.</summary>
    public const int PingPongFieldNumber = 2;
    private global::protobuf.user.Ping pingPong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.Ping PingPong {
      get { return pingPong_; }
      set {
        pingPong_ = value;
      }
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 3;
    private global::protobuf.user.Auth auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.Auth Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(PingPong, other.PingPong)) return false;
      if (!object.Equals(Auth, other.Auth)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::protobuf.user.MsgType.PingPong) hash ^= Type.GetHashCode();
      if (pingPong_ != null) hash ^= PingPong.GetHashCode();
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::protobuf.user.MsgType.PingPong) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (pingPong_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PingPong);
      }
      if (auth_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Auth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::protobuf.user.MsgType.PingPong) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (pingPong_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PingPong);
      }
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::protobuf.user.MsgType.PingPong) {
        Type = other.Type;
      }
      if (other.pingPong_ != null) {
        if (pingPong_ == null) {
          PingPong = new global::protobuf.user.Ping();
        }
        PingPong.MergeFrom(other.PingPong);
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::protobuf.user.Auth();
        }
        Auth.MergeFrom(other.Auth);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::protobuf.user.MsgType) input.ReadEnum();
            break;
          }
          case 18: {
            if (pingPong_ == null) {
              PingPong = new global::protobuf.user.Ping();
            }
            input.ReadMessage(PingPong);
            break;
          }
          case 26: {
            if (auth_ == null) {
              Auth = new global::protobuf.user.Auth();
            }
            input.ReadMessage(Auth);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.user.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      pingPong_ = other.pingPong_ != null ? other.pingPong_.Clone() : null;
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::protobuf.user.MsgType type_ = global::protobuf.user.MsgType.PingPong;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.MsgType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ping_pong" field.</summary>
    public const int PingPongFieldNumber = 2;
    private global::protobuf.user.Pong pingPong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.Pong PingPong {
      get { return pingPong_; }
      set {
        pingPong_ = value;
      }
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 3;
    private global::protobuf.user.Auth.Types.Response auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.Auth.Types.Response Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(PingPong, other.PingPong)) return false;
      if (!object.Equals(Auth, other.Auth)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::protobuf.user.MsgType.PingPong) hash ^= Type.GetHashCode();
      if (pingPong_ != null) hash ^= PingPong.GetHashCode();
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::protobuf.user.MsgType.PingPong) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (pingPong_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PingPong);
      }
      if (auth_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Auth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::protobuf.user.MsgType.PingPong) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (pingPong_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PingPong);
      }
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::protobuf.user.MsgType.PingPong) {
        Type = other.Type;
      }
      if (other.pingPong_ != null) {
        if (pingPong_ == null) {
          PingPong = new global::protobuf.user.Pong();
        }
        PingPong.MergeFrom(other.PingPong);
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::protobuf.user.Auth.Types.Response();
        }
        Auth.MergeFrom(other.Auth);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::protobuf.user.MsgType) input.ReadEnum();
            break;
          }
          case 18: {
            if (pingPong_ == null) {
              PingPong = new global::protobuf.user.Pong();
            }
            input.ReadMessage(PingPong);
            break;
          }
          case 26: {
            if (auth_ == null) {
              Auth = new global::protobuf.user.Auth.Types.Response();
            }
            input.ReadMessage(Auth);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Ping : pb::IMessage<Ping> {
    private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.user.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping(Ping other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping Clone() {
      return new Ping(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ping other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Pong : pb::IMessage<Pong> {
    private static readonly pb::MessageParser<Pong> _parser = new pb::MessageParser<Pong>(() => new Pong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.user.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pong(Pong other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pong Clone() {
      return new Pong(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private ulong time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0UL) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pong other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0UL) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Auth : pb::IMessage<Auth> {
    private static readonly pb::MessageParser<Auth> _parser = new pb::MessageParser<Auth>(() => new Auth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Auth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.user.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth(Auth other) : this() {
      id_ = other.id_;
      platformAuth_ = other.platformAuth_.Clone();
      advData_ = other.advData_ != null ? other.advData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth Clone() {
      return new Auth(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform_auth" field.</summary>
    public const int PlatformAuthFieldNumber = 2;
    private static readonly pb::FieldCodec<global::protobuf.user.Auth.Types.PlatformAuth> _repeated_platformAuth_codec
        = pb::FieldCodec.ForMessage(18, global::protobuf.user.Auth.Types.PlatformAuth.Parser);
    private readonly pbc::RepeatedField<global::protobuf.user.Auth.Types.PlatformAuth> platformAuth_ = new pbc::RepeatedField<global::protobuf.user.Auth.Types.PlatformAuth>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::protobuf.user.Auth.Types.PlatformAuth> PlatformAuth {
      get { return platformAuth_; }
    }

    /// <summary>Field number for the "adv_data" field.</summary>
    public const int AdvDataFieldNumber = 3;
    private global::protobuf.user.Auth.Types.AdvData advData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.Auth.Types.AdvData AdvData {
      get { return advData_; }
      set {
        advData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Auth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Auth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!platformAuth_.Equals(other.platformAuth_)) return false;
      if (!object.Equals(AdvData, other.AdvData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= platformAuth_.GetHashCode();
      if (advData_ != null) hash ^= AdvData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      platformAuth_.WriteTo(output, _repeated_platformAuth_codec);
      if (advData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdvData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += platformAuth_.CalculateSize(_repeated_platformAuth_codec);
      if (advData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdvData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Auth other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      platformAuth_.Add(other.platformAuth_);
      if (other.advData_ != null) {
        if (advData_ == null) {
          AdvData = new global::protobuf.user.Auth.Types.AdvData();
        }
        AdvData.MergeFrom(other.AdvData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            platformAuth_.AddEntriesFrom(input, _repeated_platformAuth_codec);
            break;
          }
          case 26: {
            if (advData_ == null) {
              AdvData = new global::protobuf.user.Auth.Types.AdvData();
            }
            input.ReadMessage(AdvData);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Auth message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::protobuf.user.Auth.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          status_ = other.status_;
          profile_ = other.profile_ != null ? other.profile_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 1;
        private global::protobuf.user.Auth.Types.Response.Types.Status status_ = global::protobuf.user.Auth.Types.Response.Types.Status.Success;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::protobuf.user.Auth.Types.Response.Types.Status Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "profile" field.</summary>
        public const int ProfileFieldNumber = 2;
        private global::protobuf.user.Profile profile_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::protobuf.user.Profile Profile {
          get { return profile_; }
          set {
            profile_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Status != other.Status) return false;
          if (!object.Equals(Profile, other.Profile)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Status != global::protobuf.user.Auth.Types.Response.Types.Status.Success) hash ^= Status.GetHashCode();
          if (profile_ != null) hash ^= Profile.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Status != global::protobuf.user.Auth.Types.Response.Types.Status.Success) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Status);
          }
          if (profile_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Profile);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Status != global::protobuf.user.Auth.Types.Response.Types.Status.Success) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          if (profile_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Status != global::protobuf.user.Auth.Types.Response.Types.Status.Success) {
            Status = other.Status;
          }
          if (other.profile_ != null) {
            if (profile_ == null) {
              Profile = new global::protobuf.user.Profile();
            }
            Profile.MergeFrom(other.Profile);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Status = (global::protobuf.user.Auth.Types.Response.Types.Status) input.ReadEnum();
                break;
              }
              case 18: {
                if (profile_ == null) {
                  Profile = new global::protobuf.user.Profile();
                }
                input.ReadMessage(Profile);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Response message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Status {
            [pbr::OriginalName("success")] Success = 0,
            [pbr::OriginalName("bad_auth")] BadAuth = 1,
            [pbr::OriginalName("back_pressure")] BackPressure = 2,
          }

        }
        #endregion

      }

      public sealed partial class PlatformAuth : pb::IMessage<PlatformAuth> {
        private static readonly pb::MessageParser<PlatformAuth> _parser = new pb::MessageParser<PlatformAuth>(() => new PlatformAuth());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlatformAuth> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::protobuf.user.Auth.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlatformAuth() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlatformAuth(PlatformAuth other) : this() {
          type_ = other.type_;
          platformId_ = other.platformId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlatformAuth Clone() {
          return new PlatformAuth(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType type_ = global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType.Google;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "platform_id" field.</summary>
        public const int PlatformIdFieldNumber = 2;
        private string platformId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PlatformId {
          get { return platformId_; }
          set {
            platformId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlatformAuth);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlatformAuth other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (PlatformId != other.PlatformId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType.Google) hash ^= Type.GetHashCode();
          if (PlatformId.Length != 0) hash ^= PlatformId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType.Google) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (PlatformId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PlatformId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType.Google) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (PlatformId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlatformAuth other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType.Google) {
            Type = other.Type;
          }
          if (other.PlatformId.Length != 0) {
            PlatformId = other.PlatformId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::protobuf.user.Auth.Types.PlatformAuth.Types.PlatformType) input.ReadEnum();
                break;
              }
              case 18: {
                PlatformId = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the PlatformAuth message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PlatformType {
            [pbr::OriginalName("google")] Google = 0,
            [pbr::OriginalName("apple")] Apple = 1,
          }

        }
        #endregion

      }

      public sealed partial class AdvData : pb::IMessage<AdvData> {
        private static readonly pb::MessageParser<AdvData> _parser = new pb::MessageParser<AdvData>(() => new AdvData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AdvData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::protobuf.user.Auth.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AdvData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AdvData(AdvData other) : this() {
          id1_ = other.id1_;
          id2_ = other.id2_;
          id3_ = other.id3_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AdvData Clone() {
          return new AdvData(this);
        }

        /// <summary>Field number for the "id1" field.</summary>
        public const int Id1FieldNumber = 1;
        private string id1_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id1 {
          get { return id1_; }
          set {
            id1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "id2" field.</summary>
        public const int Id2FieldNumber = 2;
        private string id2_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id2 {
          get { return id2_; }
          set {
            id2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "id3" field.</summary>
        public const int Id3FieldNumber = 3;
        private string id3_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id3 {
          get { return id3_; }
          set {
            id3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AdvData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AdvData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id1 != other.Id1) return false;
          if (Id2 != other.Id2) return false;
          if (Id3 != other.Id3) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id1.Length != 0) hash ^= Id1.GetHashCode();
          if (Id2.Length != 0) hash ^= Id2.GetHashCode();
          if (Id3.Length != 0) hash ^= Id3.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id1.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id1);
          }
          if (Id2.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Id2);
          }
          if (Id3.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Id3);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id1.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id1);
          }
          if (Id2.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id2);
          }
          if (Id3.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id3);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AdvData other) {
          if (other == null) {
            return;
          }
          if (other.Id1.Length != 0) {
            Id1 = other.Id1;
          }
          if (other.Id2.Length != 0) {
            Id2 = other.Id2;
          }
          if (other.Id3.Length != 0) {
            Id3 = other.Id3;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id1 = input.ReadString();
                break;
              }
              case 18: {
                Id2 = input.ReadString();
                break;
              }
              case 26: {
                Id3 = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Profile : pb::IMessage<Profile> {
    private static readonly pb::MessageParser<Profile> _parser = new pb::MessageParser<Profile>(() => new Profile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Profile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.user.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile(Profile other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      levelData_ = other.levelData_ != null ? other.levelData_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile Clone() {
      return new Profile(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level_data" field.</summary>
    public const int LevelDataFieldNumber = 3;
    private global::protobuf.user.Profile.Types.LevelData levelData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::protobuf.user.Profile.Types.LevelData LevelData {
      get { return levelData_; }
      set {
        levelData_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::protobuf.user.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(34, global::protobuf.user.Item.Parser);
    private readonly pbc::RepeatedField<global::protobuf.user.Item> items_ = new pbc::RepeatedField<global::protobuf.user.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::protobuf.user.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Profile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Profile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(LevelData, other.LevelData)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (levelData_ != null) hash ^= LevelData.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (levelData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LevelData);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (levelData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelData);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Profile other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.levelData_ != null) {
        if (levelData_ == null) {
          LevelData = new global::protobuf.user.Profile.Types.LevelData();
        }
        LevelData.MergeFrom(other.LevelData);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (levelData_ == null) {
              LevelData = new global::protobuf.user.Profile.Types.LevelData();
            }
            input.ReadMessage(LevelData);
            break;
          }
          case 34: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Profile message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class LevelData : pb::IMessage<LevelData> {
        private static readonly pb::MessageParser<LevelData> _parser = new pb::MessageParser<LevelData>(() => new LevelData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LevelData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::protobuf.user.Profile.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LevelData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LevelData(LevelData other) : this() {
          exp_ = other.exp_;
          level_ = other.level_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LevelData Clone() {
          return new LevelData(this);
        }

        /// <summary>Field number for the "exp" field.</summary>
        public const int ExpFieldNumber = 1;
        private int exp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Exp {
          get { return exp_; }
          set {
            exp_ = value;
          }
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 2;
        private int level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LevelData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LevelData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exp != other.Exp) return false;
          if (Level != other.Level) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Exp != 0) hash ^= Exp.GetHashCode();
          if (Level != 0) hash ^= Level.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Exp != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Exp);
          }
          if (Level != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Exp != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
          }
          if (Level != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LevelData other) {
          if (other == null) {
            return;
          }
          if (other.Exp != 0) {
            Exp = other.Exp;
          }
          if (other.Level != 0) {
            Level = other.Level;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Exp = input.ReadInt32();
                break;
              }
              case 16: {
                Level = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.user.MessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      type_ = other.type_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
